<?php
// $Id: api_link_code.test,v 1.4 2008/12/15 07:16:19 drumm Exp $

class ApiLinkCodeTest extends DrupalWebTestCase {
  function getInfo() {
    return array(
      'name' => t('api_link_code()'),
      'description' => t('Test the api_link_code() function.'),
      'group' => 'API Module',
    );
  }

  function setUp() {
    parent::setUp('api', 'job_queue');

    include drupal_get_path('module', 'api') .'/api.admin.inc';
    include drupal_get_path('module', 'api') .'/parser.inc';

    // Make a branch for sample code.
    $branch->branch_name = '6';
    $branch->title = 'Testing 6';
    $branch->directory = drupal_get_path('module', 'api') .'/tests/sample';
    api_save_branch($branch);

    // Parse the code.
    api_update_all_branches();
    while (job_queue_dequeue()) { }
  }
  
  function testApiLinkCode() {
    $branch_name = '6';

    $tests = array(
      // Should be linked
      array(
        'message' => 'Marked-up function name linking',
        'data' => '<span class="php-function-or-constant">sample_function</span>',
        'expected' => '<span class="php-function-or-constant"><a href="'. url('api/function/sample_function/6') .'" title="A sample function." class="local">sample_function</a></span>',
      ),

      // Should not be linked
      array(
        'message' => 'Function name linking',
        'data' => 'sample_function',
        'expected' => 'sample_function',
      ),
      array(
        'message' => 'Function name linking with (',
        'data' => 'sample_function(',
        'expected' => 'sample_function(',
      ),
    );

    foreach ($tests as $test) {
      $result = api_link_code($test['data'], $branch_name);
      $this->assertEqual($result, $test['expected'], $test['message']);
    }
  }
}
