<?php
// $Id: api_link_documentation.test,v 1.1.2.2 2007/08/04 01:07:12 drumm Exp $

class ApiLinkDocumentationTest extends DrupalTestCase {
  function get_info() {
    return array(
      'name' => t('api_link_documentation()'),
      'desc' => t('Test the api_link_documentation() function.'),
      'group' => 'API Module',
    );
  }

  function setUp() {
  }
  
  function testApiLinkDocumentation() {
    $branch_name = variable_get('api_default_branch', 'HEAD');
    $function_name = 'drupal_bootstrap';
    $function_summary = db_result(db_query("SELECT summary FROM {api_documentation} WHERE branch_name = '%s' AND object_type = 'function' AND object_name = '%s'", $branch_name, $function_name));
    $function_link = '<a href="'. url('api/function/'. $function_name .'/'. $branch_name) .'" title="'. $function_summary .'" class="local">'. $function_name .'</a>';

    $tests = array(
      // Should be linked
      array(
        'message' => 'Function name linking',
        'data' => $function_name .'(',
        'expected' => $function_link .'(',
      ),
      array(
        'message' => 'Function name linking with preceding space',
        'data' => ' '. $function_name .'(',
        'expected' => ' '. $function_link .'(',
      ),
      array(
        'message' => 'Function name linking with preceding non-word character',
        'data' => '.'. $function_name .'(',
        'expected' => '.'. $function_link .'(',
      ),

      // Should not be linked
      array(
        'message' => 'Function name linking with preceding letter',
        'data' => 'a'. $function_name .'(',
        'expected' => 'a'. $function_name .'(',
      ),
      array(
        'message' => 'Function name linking without parenthesis',
        'data' => $function_name,
        'expected' => $function_name,
      ),
      array(
        'message' => 'Function name linking inside a HTML tag',
        'data' => '<tag attribute="'. $function_name .'()">',
        'expected' => '<tag attribute="'. $function_name .'()">',
      ),
    );

    foreach ($tests as $test) {
      $result = api_link_documentation($test['data'], $branch_name);
      $this->assertEqual($result, $test['expected'], $test['message']);
    }
  }
}
