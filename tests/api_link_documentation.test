<?php
// $Id: api_link_documentation.test,v 1.5 2008/12/26 21:19:50 drumm Exp $

include_once './'. drupal_get_path('module', 'api') .'/tests/api_test_case.php';

class ApiLinkDocumentationTest extends ApiTestCase {
  function getInfo() {
    return array(
      'name' => t('api_link_documentation()'),
      'description' => t('Test the api_link_documentation() function.'),
      'group' => 'API Module',
    );
  }

  function testApiLinkDocumentation() {
    $tests = array(
      // Should be linked
      array(
        'message' => 'Function name linking',
        'data' => 'sample_function(',
        'expected' => '<a href="'. url('api/function/sample_function/6') .'" title="A sample function." class="local">sample_function</a>(',
      ),
      array(
        'message' => 'Function name linking with preceding space',
        'data' => ' sample_function(',
        'expected' => ' <a href="'. url('api/function/sample_function/6') .'" title="A sample function." class="local">sample_function</a>(',
      ),
      array(
        'message' => 'Function @link',
        'data' => '@link sample_function A sample function. @endlink',
        'expected' => '<a href="'. url('api/function/sample_function/6') .'" title="A sample function." class="local">A sample function.</a>',
      ),

      // Should not be linked
      array(
        'message' => 'Function name linking with preceding non-space character',
        'data' => '.sample_function(',
        'expected' => '.sample_function(',
      ),
      array(
        'message' => 'Function name linking with preceding letter',
        'data' => 'asample_function(',
        'expected' => 'asample_function(',
      ),
      array(
        'message' => 'Function name linking without parenthesis',
        'data' => 'sample_function',
        'expected' => 'sample_function',
      ),
      array(
        'message' => 'Function name linking inside a HTML tag',
        'data' => '<tag attribute="sample_function()">',
        'expected' => '<tag attribute="sample_function()">',
      ),
      array(
        'message' => 'Function \@link',
        'data' => '\@link sample_function A sample function. @endlink',
        'expected' => '\@link sample_function A sample function. @endlink',
      ),

      // Should be linked
      array(
        'message' => 'File name linking',
        'data' => 'sample.php',
        'expected' => '<a href="'. url('api/file/sample.php/6') .'" title="A sample file." class="local">sample.php</a>',
      ),
      array(
        'message' => 'File name linking with preceding space',
        'data' => ' sample.php',
        'expected' => ' <a href="'. url('api/file/sample.php/6') .'" title="A sample file." class="local">sample.php</a>',
      ),
      array(
        'message' => 'File name linking with following space',
        'data' => 'sample.php ',
        'expected' => '<a href="'. url('api/file/sample.php/6') .'" title="A sample file." class="local">sample.php</a> ',
      ),
      array(
        'message' => 'File name linking with following punctuation',
        'data' => 'sample.php.',
        'expected' => '<a href="'. url('api/file/sample.php/6') .'" title="A sample file." class="local">sample.php</a>.',
      ),
      array(
        'message' => 'File @link',
        'data' => '@link sample.php A sample file. @endlink',
        'expected' => '<a href="'. url('api/file/sample.php/6') .'" title="A sample file." class="local">A sample file.</a>',
      ),

      // Should not be linked
      array(
        'message' => 'File name linking with preceding non-space character',
        'data' => '.sample.php',
        'expected' => '.sample.php',
      ),
      array(
        'message' => 'File name linking with preceding letter',
        'data' => 'asample.php',
        'expected' => 'asample.php',
      ),
      array(
        'message' => 'File name linking inside a HTML tag',
        'data' => '<tag attribute="sample.php">',
        'expected' => '<tag attribute="sample.php">',
      ),
      array(
        'message' => 'File \@link, does fill in file link',
        'data' => '\@link sample.php A sample file. @endlink',
        'expected' => '\@link <a href="'. url('api/file/sample.php/6') .'" title="A sample file." class="local">sample.php</a> A sample file. @endlink',
      ),
    );

    foreach ($tests as $test) {
      $result = api_link_documentation($test['data'], 6);
      $this->assertEqual($result, $test['expected'], $test['message']);
    }
  }
}
